language: cpp

compiler:
  - gcc
  - clang

os: linux

dist: bionic

sudo: required

branches:
  only:
    - master

notifications:
  slack:
    rooms:
      - ecpsparsesolvers:nBWC0jcAd7B1j9whHUYcaVJO
    on_failure: always
    on_success: change

env:
  matrix:
  - TEST_NUMBER=1 FILE="test_HSS_seq"
  - TEST_NUMBER=2 FILE="test_HSS_mpi"
  - TEST_NUMBER=3 FILE="test_sparse_seq"
  - TEST_NUMBER=4 FILE="test_sparse_mpi"

git:
  depth: 1

addons:
  apt:
    packages:
      - g++
      - gcc
      - gfortran
      - libblas-dev
      - liblapack-dev
      - libmetis-dev
      - mpich
      - libmpich-dev
      - libscalapack-mpich-dev
      - libparmetis-dev
      - libptscotch-dev

before_install:
  - mkdir installDir
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  # - update-alternatives --display mpi
  # - update-alternatives --display mpirun
  # - sudo update-alternatives --set mpi /usr/include/mpich
  # - sudo update-alternatives --set mpirun /usr/bin/mpirun.mpich
  # - update-alternatives --display mpi
  # - update-alternatives --display mpirun

install:
  # - printf "Installing openmpi\n"
  # - sudo apt-get install openmpi-bin libopenmpi-dev
  # - printf "Done installing openmpi\n"

  # - printf "Installing scalapack, parmetis\n"
  # - sudo apt-get install libscalapack-openmpi-dev libparmetis-dev
  # - printf "Done installing scalapack, parmetis\n"

  # - cd $TRAVIS_BUILD_DIR/installDir
  # - printf "Downloading mpich source."
  # - wget http://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz
  # # - wget http://www.mpich.org/static/downloads/3.2/mpich-3.2.tar.gz
  # - tar xfz mpich-3.3.2.tar.gz
  # - rm mpich-3.3.2.tar.gz
  # - echo "configuring and building mpich."
  # - cd mpich-3.3.2
  # - ./configure --prefix=`pwd`/../mpich --enable-g=none --enable-timing=none
  # - make -j4
  # - make install
  # - cd ..
  # - export MPI_HOME=`pwd`/mpich
  # - echo $MPI_HOME
  # - ls $MPI_HOME
  # - ls $MPI_HOME/bin
  # - ls $MPI_HOME/include
  # - ls $MPI_HOME/lib
  # - $MPI_HOME/bin/mpicc -compile_info
  # - rm -rf mpich-3.3.2

  # - printf "${BLUE} GC; Installing ScaLAPACK from source\n"
  # - cd $TRAVIS_BUILD_DIR/installDir
  # - wget http://www.netlib.org/scalapack/scalapack-2.1.0.tgz
  # - tar -xf scalapack-2.1.0.tgz
  # - cd scalapack-2.1.0
  # - mkdir build
  # - mkdir install
  # - cd build
  # - |
  #  cmake ../ \
  #  -DCMAKE_INSTALL_PREFIX=../install
  #   -DCMAKE_CXX_COMPILER=mpiCC \
  #   -DCMAKE_C_COMPILER=mpicc \
  #   -DCMAKE_Fortran_COMPILER=mpif90
  # - make
  # - cd ../
  # - export SCALAPACK_DIR=$PWD/install
  # - printf "${BLUE} GC; Done installing ScaLAPACK from source\n"

  # - cd $TRAVIS_BUILD_DIR/installDir
  # - wget --no-check-certificate https://gforge.inria.fr/frs/download.php/file/38352/scotch_6.1.0.tar.gz
  # - tar -xf scotch_6.1.0.tar.gz
  # - cd ./scotch_6.1.0
  # - export SCOTCH_DIR=`pwd`/install
  # - mkdir install
  # - cd ./src
  # - cp ./Make.inc/Makefile.inc.x86-64_pc_linux2 Makefile.inc
  # - sed -i "s/-DSCOTCH_PTHREAD//" Makefile.inc
  # - sed -i "s/CCD/#CCD/" Makefile.inc
  # - printf "CCD = mpicc\n" >> Makefile.inc
  # - cat Makefile.inc
  # - make ptscotch > make_scotch.log 2>&1
  # - make prefix=../install install > make_scotch_install.log 2>&1

  - cd $TRAVIS_BUILD_DIR
  - mkdir build
  - cd build
  # - $CC --version
  # - $CXX --version
  - clang --version
  - clang++ --version
  - which clang
  - which clang++
  - mpic++ --version
  - ls -alh /etc/alternatives/mpic++
  - ls -alh /etc/alternatives/mpirun
  - ls -alh /etc/alternatives/mpiexec
  - update-alternatives --display mpi
  - find /usr -iname "libscalapack*"
  - |
    cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=. \
    -DCMAKE_CXX_COMPILER=mpic++ \
    -DCMAKE_C_COMPILER=mpicc \
    -DCMAKE_Fortran_COMPILER=mpif90 \
    -DTPL_SCALAPACK_LIBRARIES="/usr/lib/x86_64-linux-gnu/libscalapack-mpich.so"
   # -DTPL_SCALAPACK_LIBRARIES="/usr/lib/x86_64-linux-gnu/libscalapack-openmpi.so"
  - make VERBOSE=1
  - make install
  - make tests

script:
  - cd $TRAVIS_BUILD_DIR
  - ./.travis_tests.sh
